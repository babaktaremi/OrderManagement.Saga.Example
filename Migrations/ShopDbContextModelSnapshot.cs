// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OrderManagement.Saga.Example.Database.DbContexts;

#nullable disable

namespace OrderManagement.Saga.Example.Migrations
{
    [DbContext(typeof(ShopDbContext))]
    partial class ShopDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OrderManagement.Saga.Example.Database.EntityModels.OrderEntity", b =>
                {
                    b.Property<Guid>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("OrderCreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OrderState")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("OrderUpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("OrderId");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("Orders", "ord");
                });

            modelBuilder.Entity("OrderManagement.Saga.Example.Database.EntityModels.ProductInventoryEntity", b =>
                {
                    b.Property<Guid>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AvailableAmount")
                        .HasColumnType("int");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("ProductPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ProductId");

                    b.ToTable("Products", "prd");
                });

            modelBuilder.Entity("OrderManagement.Saga.Example.Database.EntityModels.UserEntity", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("UserId");

                    b.ToTable("users", "usr");
                });

            modelBuilder.Entity("OrderManagement.Saga.Example.Database.EntityModels.UserWalletEntity", b =>
                {
                    b.Property<Guid>("WalletId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("WalletChargeAmount")
                        .HasPrecision(9, 3)
                        .HasColumnType("decimal(9,3)");

                    b.HasKey("WalletId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("UserWallets", "usr");
                });

            modelBuilder.Entity("OrderManagement.Saga.Example.Sagas.OrderSaga.OrderSagaStateMachineInstance", b =>
                {
                    b.Property<Guid>("CorrelationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CurrentState")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsOrderCompleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOrderInventoryProcessed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOrderPaid")
                        .HasColumnType("bit");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CorrelationId");

                    b.ToTable("OrderSaga");
                });

            modelBuilder.Entity("OrderManagement.Saga.Example.Database.EntityModels.OrderEntity", b =>
                {
                    b.HasOne("OrderManagement.Saga.Example.Database.EntityModels.ProductInventoryEntity", "Product")
                        .WithMany("RelatedOrders")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OrderManagement.Saga.Example.Database.EntityModels.UserEntity", "User")
                        .WithMany("UserOrders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("OrderManagement.Saga.Example.Database.EntityModels.UserWalletEntity", b =>
                {
                    b.HasOne("OrderManagement.Saga.Example.Database.EntityModels.UserEntity", "User")
                        .WithOne("UserWallet")
                        .HasForeignKey("OrderManagement.Saga.Example.Database.EntityModels.UserWalletEntity", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("OrderManagement.Saga.Example.Database.EntityModels.ProductInventoryEntity", b =>
                {
                    b.Navigation("RelatedOrders");
                });

            modelBuilder.Entity("OrderManagement.Saga.Example.Database.EntityModels.UserEntity", b =>
                {
                    b.Navigation("UserOrders");

                    b.Navigation("UserWallet")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
